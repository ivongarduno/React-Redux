{"version":3,"sources":["redux/reducers/resultsReducer.js","redux/store.js","components/itemHero/itemHero.jsx","components/search/search.jsx","lib/api.js","App.js","index.js"],"names":["defaultState","results","mainReducer","combineReducers","state","action","type","payload","createStore","applyMiddleware","thunk","ItemHero","hero","name","image","biography","work","srcImage","url","firstAppearance","className","src","alt","publisher","occupation","Search","props","hanldeChange","event","target","value","console","log","setState","handleGet","preventDefault","fetchGetHero","text","this","onSubmit","clasName","placeholder","onChange","map","key","id","Component","connect","dispatch","URL","fetch","then","response","json","recurso","apiGetHero","res","App","store","ReactDOM","render","document","getElementById"],"mappings":"4RAEMA,EAAe,CACjBC,QAAS,ICIPC,EAAcC,YAAgB,CAAEF,QDoBvB,WAAmC,IAAlCG,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC7C,OAAQA,EAAOC,MAEX,IAvBS,WAwBL,OAAID,EAAOE,QAGJ,eAAKH,EAAZ,CAAmBH,QAASI,EAAOE,UAFxB,eAAKH,GAIpB,QACI,OAAO,eAAKA,OC3BTI,cACXN,EACAO,YAAgBC,M,+CCgBLC,G,MAxBE,SAAC,GAA+C,IAAD,IAA5CC,KAAQC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,KAE1CC,EAAQ,UAAMH,EAAMI,KACpBC,EAAkBJ,EAAU,oBAElC,OACE,wBAAIK,UAAU,YACZ,yBAAKA,UAAU,QACf,wBAAIA,UAAU,cAAcP,GAC1B,yBACEO,UAAU,eACVC,IAAKJ,EACLK,IAAI,KAEN,yBAAKF,UAAU,aACb,uBAAGA,UAAU,aAAY,gDAAzB,IAAmDD,GACnD,uBAAGC,UAAU,aAAY,yCAAzB,IAA4CL,EAAUQ,WACtD,uBAAGH,UAAU,aAAY,0CAAzB,IAA6CJ,EAAKQ,iBCdxDC,G,kBAEF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KASVC,aAAe,SAACC,GACZ,IAAIf,EAAOe,EAAMC,OAAOhB,KACpBiB,EAAQF,EAAMC,OAAOC,MACzBC,QAAQC,IAAIF,GACZ,EAAKG,SAAL,yBAAoBpB,GAASiB,KAdd,EAiBnBI,UAAY,SAACN,GACTA,EAAMO,iBACN,EAAKT,MAAMU,aAAa,EAAKhC,MAAMiC,MACnC,EAAKJ,SAAS,CAAEI,KAAM,MAjBtB,EAAKjC,MAAQ,CACTiC,KAAM,IAJK,E,sEAyBf,IAAMpC,EAAUqC,KAAKZ,MAAMzB,QAI3B,OAHA8B,QAAQC,IAAI/B,GAIR,kBAAC,WAAD,KACA,yBAAKmB,UAAU,kBACX,0BAAMmB,SAAUD,KAAKJ,UAAWM,SAAS,eACrC,2BAAO3B,KAAK,OACZ4B,YAAY,aACZX,MAAOQ,KAAKlC,MAAMiC,KAClBK,SAAUJ,KAAKX,eACf,4BAAQrB,KAAK,SAASc,UAAU,aAAhC,YAGR,yBAAKA,UAAU,qBAEPnB,EAAQ0C,KAAI,SAAC/B,GAET,OACI,wBAAIgC,IAAKhC,EAAKiC,IACV,kBAAC,EAAD,CAAUjC,KAAMA,c,GAhD3BkC,cA6DNC,eAEX,SAAC3C,GAAD,MAAY,CACRH,QAASG,EAAMH,QAAQA,WAG3B,CACImC,aH9DoB,SAACvB,GAEzB,OADAkB,QAAQC,IAAInB,GACL,SAACmC,IIbc,SAACnC,GACvB,IAAMoC,EAHM,iEAGUpC,EAGtB,OAFAkB,QAAQC,IAAInB,GACZkB,QAAQC,IAAIiB,GACLC,MAAMD,GACRE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEF,OADAvB,QAAQC,IAAIsB,EAAQrD,SACbqD,EAAQrD,YJOnBsD,CAAW1C,GACNsC,MAAK,SAAAK,GACFR,EATc,CAAE1C,KAHf,WAG+BC,QASfiD,UGiDlBT,CASbtB,GE9DagC,G,MARH,kBACV,kBAAC,IAAD,CAAUC,MAAOA,GACf,0BAAMtC,UAAU,QACd,kBAAC,EAAD,UCLNuC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.0515b418.chunk.js","sourcesContent":["import { apiGetHero } from '../../lib/api';\r\n\r\nconst defaultState = {\r\n    results: []\r\n};\r\n\r\n//type of action\r\nconst GET_HERO = 'GET_HERO';\r\n\r\n //action\r\nconst getHero = (results) => ({ type: GET_HERO, payload: results });\r\n\r\n//funcion usada en search que desencadena la action\r\nexport const fetchGetHero = (name) => {\r\n    console.log(name);\r\n    return (dispatch) => {\r\n        //llamamos a la funcion de la API\r\n        apiGetHero(name)\r\n            .then(res => {\r\n                dispatch(getHero(res));\r\n            });\r\n            // .catch(res => {\r\n            //     console.log(res);\r\n            // })\r\n    }\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        //en todos los casos regresamos un objeto nuevo en el cual incluimos todos las propiedades del objeto state con ...state\r\n        case GET_HERO: {\r\n            if(!action.payload){\r\n                return { ...state,  };\r\n            }\r\n            return { ...state, results: action.payload };\r\n        }    \r\n        default:\r\n            return { ...state };\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//importamos nuestro reducer\r\nimport resultsReducer from './reducers/resultsReducer';\r\n\r\n\r\nconst mainReducer = combineReducers({ results: resultsReducer});\r\n\r\n\r\nexport default createStore(\r\n    mainReducer,\r\n    applyMiddleware(thunk)\r\n);\r\n","import React from 'react';\r\nimport './itemHero.css';\r\n\r\n\r\nconst ItemHero = ({ hero: { name, image, biography, work }}) => {\r\n    \r\n    const srcImage = `${image.url}`\r\n    const firstAppearance = biography['first-appearance']\r\n\r\n    return (\r\n      <li className=\"ListItem\">\r\n        <div className=\"card\">\r\n        <h3 className=\"card-title\">{name}</h3>\r\n          <img\r\n            className=\"card-img-top\"\r\n            src={srcImage}\r\n            alt=\"\"\r\n          />\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text\"><b>First Appearance:</b> {firstAppearance}</p>\r\n            <p className=\"card-text\"><b>Publisher:</b> {biography.publisher}</p>\r\n            <p className=\"card-text\"><b>Occupation:</b> {work.occupation}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n\r\nexport default ItemHero;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchGetHero } from '../../redux/reducers/resultsReducer';\r\nimport ItemHero from '../itemHero/itemHero';\r\n\r\nimport './search.css';\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: ''\r\n\r\n        }\r\n    }\r\n\r\n   \r\n    hanldeChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        console.log(value);\r\n        this.setState({ [`${name}`]: value });\r\n    }\r\n\r\n    handleGet = (event) => {\r\n        event.preventDefault();\r\n        this.props.fetchGetHero(this.state.text);\r\n        this.setState({ text: ''});\r\n    }\r\n\r\n    render(){\r\n        \r\n        const results = this.props.results;\r\n        console.log(results)\r\n\r\n        \r\n        return(\r\n            <Fragment>\r\n            <div className='container-form'>\r\n                <form onSubmit={this.handleGet} clasName='form-search'>\r\n                    <input name=\"text\" \r\n                    placeholder=\"Ex: Batman\" \r\n                    value={this.state.text} \r\n                    onChange={this.hanldeChange} />\r\n                    <button type=\"submit\" className='btn btn-2'>Buscar</button>  \r\n                </form>\r\n            </div>\r\n            <div className='container-results'>\r\n                {\r\n                    results.map((hero)=>{\r\n                        \r\n                        return(\r\n                            <ul key={hero.id}>\r\n                                <ItemHero hero={hero}/>\r\n                            </ul>\r\n                        ) \r\n                        \r\n                    })   \r\n                } \r\n            </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(\r\n    //funciÃ³n que mapea propiedades del state con propiedades del componente\r\n    (state) => ({\r\n        results: state.results.results\r\n    }),\r\n    //mapeo de funciones\r\n    {\r\n        fetchGetHero\r\n    }\r\n)(Search);","const BASEURL = 'https://www.superheroapi.com/api.php/10221041764491302/search/';\r\n\r\nexport const apiGetHero = (name) => {\r\n    const URL = BASEURL + name ;\r\n    console.log(name)\r\n    console.log(URL)\r\n    return fetch(URL)\r\n        .then(response => response.json())\r\n        .then(recurso => {\r\n            console.log(recurso.results)\r\n            return recurso.results;\r\n        })\r\n        // .catch(error => {\r\n        //     console.log(error)\r\n        //     return error\r\n        // })\r\n};\r\n\r\n// export default apiGetHero;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport Search from './components/search/search';\r\n\r\nimport './style.css';\r\n\r\nconst App = () =>(\r\n  <Provider store={store}>\r\n    <main className='main'>\r\n      <Search/> \r\n    </main>\r\n  </Provider>\r\n)\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}