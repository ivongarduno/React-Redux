{"version":3,"sources":["redux/reducers/resultsReducer.js","redux/store.js","components/search.jsx","lib/api.js","App.js","index.js"],"names":["defaultState","results","mainReducer","combineReducers","state","action","type","payload","createStore","applyMiddleware","thunk","Search","props","hanldeChange","event","name","target","value","console","log","setState","handleGet","preventDefault","fetchGetHero","text","this","onSubmit","placeholder","onChange","map","hero","key","id","src","image","url","alt","Component","connect","dispatch","URL","fetch","then","response","json","recurso","apiGetHero","res","App","store","ReactDOM","render","document","getElementById"],"mappings":"6NAEMA,EAAe,CACjBC,QAAS,ICIPC,EAAcC,YAAgB,CAAEF,QDoBvB,WAAmC,IAAlCG,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC7C,OAAQA,EAAOC,MAEX,IAvBS,WAwBL,OAAID,EAAOE,QAGJ,eAAKH,EAAZ,CAAmBH,QAASI,EAAOE,UAFxB,eAAKH,GAIpB,QACI,OAAO,eAAKA,OC3BTI,cACXN,EACAO,YAAgBC,M,+CCRdC,E,YAEF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KASVC,aAAe,SAACC,GACZ,IAAIC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MACzBC,QAAQC,IAAIF,GACZ,EAAKG,SAAL,yBAAoBL,GAASE,KAdd,EAiBnBI,UAAY,SAACP,GACTA,EAAMQ,iBACN,EAAKV,MAAMW,aAAa,EAAKnB,MAAMoB,MACnC,EAAKJ,SAAS,CAAEI,KAAM,MAjBtB,EAAKpB,MAAQ,CACToB,KAAM,IAJK,E,sEAyBf,IAAMvB,EAAUwB,KAAKb,MAAMX,QAG3B,OAFAiB,QAAQC,IAAIlB,GAGR,0BAAMyB,SAAUD,KAAKJ,WACrB,2BAAON,KAAK,OAAOY,YAAY,aAAaV,MAAOQ,KAAKrB,MAAMoB,KAAMI,SAAUH,KAAKZ,eACnF,4BAAQP,KAAK,UAAb,UAEIL,EAAQ4B,KAAI,SAACC,GACL,OACA,wBAAIC,IAAKD,EAAKE,IACd,4BAAKF,EAAKf,MACV,yBAAKkB,IAAKH,EAAKI,MAAMC,IAAKC,IAAKN,EAAKf,gB,GAvCvCsB,aAsDNC,eAEX,SAAClC,GAAD,MAAY,CACRH,QAASG,EAAMH,QAAQA,WAG3B,CACIsB,aFpDoB,SAACR,GAEzB,OADAG,QAAQC,IAAIJ,GACL,SAACwB,IGbc,SAACxB,GACvB,IAAMyB,EAHM,iEAGUzB,EAGtB,OAFAG,QAAQC,IAAIJ,GACZG,QAAQC,IAAIqB,GACLC,MAAMD,GACRE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEF,OADA3B,QAAQC,IAAI0B,EAAQ5C,SACb4C,EAAQ5C,YHOnB6C,CAAW/B,GACN2B,MAAK,SAAAK,GACFR,EATc,CAAEjC,KAHf,WAG+BC,QASfwC,UEuClBT,CASb3B,GEtDaqC,EARH,kBACV,kBAAC,IAAD,CAAUC,MAAOA,GACf,8BACE,kBAAC,EAAD,SCHNC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.78ebf869.chunk.js","sourcesContent":["import { apiGetHero } from '../../lib/api';\r\n\r\nconst defaultState = {\r\n    results: []\r\n};\r\n\r\n//type of action\r\nconst GET_HERO = 'GET_HERO';\r\n\r\n //action\r\nconst getHero = (results) => ({ type: GET_HERO, payload: results });\r\n\r\n//funcion usada en search que desencadena la action\r\nexport const fetchGetHero = (name) => {\r\n    console.log(name);\r\n    return (dispatch) => {\r\n        //llamamos a la funcion de la API\r\n        apiGetHero(name)\r\n            .then(res => {\r\n                dispatch(getHero(res));\r\n            });\r\n            // .catch(res => {\r\n            //     console.log(res);\r\n            // })\r\n    }\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        //en todos los casos regresamos un objeto nuevo en el cual incluimos todos las propiedades del objeto state con ...state\r\n        case GET_HERO: {\r\n            if(!action.payload){\r\n                return { ...state,  };\r\n            }\r\n            return { ...state, results: action.payload };\r\n        }    \r\n        default:\r\n            return { ...state };\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//importamos nuestro reducer\r\nimport resultsReducer from './reducers/resultsReducer';\r\n\r\n\r\nconst mainReducer = combineReducers({ results: resultsReducer});\r\n\r\n\r\nexport default createStore(\r\n    mainReducer,\r\n    applyMiddleware(thunk)\r\n);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchGetHero } from '../redux/reducers/resultsReducer';\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: ''\r\n\r\n        }\r\n    }\r\n\r\n   \r\n    hanldeChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        console.log(value);\r\n        this.setState({ [`${name}`]: value });\r\n    }\r\n\r\n    handleGet = (event) => {\r\n        event.preventDefault();\r\n        this.props.fetchGetHero(this.state.text);\r\n        this.setState({ text: ''});\r\n    }\r\n\r\n    render(){\r\n        \r\n        const results = this.props.results;\r\n        console.log(results)\r\n        \r\n        return(\r\n            <form onSubmit={this.handleGet}>\r\n            <input name=\"text\" placeholder=\"Ex: Batman\" value={this.state.text} onChange={this.hanldeChange} />\r\n            <button type=\"submit\">Buscar</button>\r\n                {\r\n                results.map((hero)=>{\r\n                        return(\r\n                        <ul key={hero.id}>\r\n                        <h1>{hero.name}</h1>\r\n                        <img src={hero.image.url} alt={hero.name}></img>\r\n                        </ul>\r\n                        )\r\n                    \r\n                })\r\n                \r\n            } \r\n        \r\n            \r\n            </form>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(\r\n    //funciÃ³n que mapea propiedades del state con propiedades del componente\r\n    (state) => ({\r\n        results: state.results.results\r\n    }),\r\n    //mapeo de funciones\r\n    {\r\n        fetchGetHero\r\n    }\r\n)(Search);","const BASEURL = 'https://www.superheroapi.com/api.php/10221041764491302/search/';\r\n\r\nexport const apiGetHero = (name) => {\r\n    const URL = BASEURL + name ;\r\n    console.log(name)\r\n    console.log(URL)\r\n    return fetch(URL)\r\n        .then(response => response.json())\r\n        .then(recurso => {\r\n            console.log(recurso.results)\r\n            return recurso.results;\r\n        })\r\n        // .catch(error => {\r\n        //     console.log(error)\r\n        //     return error\r\n        // })\r\n};\r\n\r\n// export default apiGetHero;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport Search from './components/search';\r\n\r\nconst App = () =>(\r\n  <Provider store={store}>\r\n    <main>\r\n      <Search/> \r\n    </main>\r\n  </Provider>\r\n)\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}